import random
import pygame
"""Move class to different file"""

# the grid object, which I use to store griddlers. includes some useful functions for easy use.
class grid(object):
    def __init__(self,size,option):
        self.size = size

        # options for creating grid: 0=randomize,1=blank
        if option==0:
            self.body = [[random.choice(['X',' ']) for i in range(size)] for i in range(size)]
        elif option>=1:
            self.body = [[" " for i in range(size)] for i in range(size)]


    def draw(self):
        for i in self.body:
            print "".join(i)

    def row(self,n):
        return self.body[n]

    def col(self,n):
        return[line[n] for line in self.body]

    def fill(self,row,col):
        self.body[row][col] = 'X'

    def erase(self,row,col):
        self.body[row][col] = ' '

# the algorithm which describes a line/column, griddler style (distinguishing the "blobs" in aline and counting them)
def desc_line(line):
    c = 0
    res = []
    for i in line:
        if i=='X':
            c+=1
        elif i==' ' and c!=0:
            res+=str(c)
            c=0
    if c!=0:
        res+=str(c)
    return res

# create grid object to base game window on
a = grid(5,0)

# Setting some constants for the game window.
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREY = (128,128,128)
WIDTH = 20
HEIGHT = 20
MARGIN = 5
FRAME = 50

# initialize the pygame module.
pygame.init()
# set the size of the window according to the size of the grid.
size = int(a.size*25.5)
WINDOW_SIZE = [size+FRAME, size+FRAME]
screen = pygame.display.set_mode(WINDOW_SIZE)

pygame.display.set_caption("Griddlers maker")

done = False

clock = pygame.time.Clock()
# choose font for hint numbers
font = pygame.font.SysFont("arial", 15)



while not done:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True
        elif event.type == pygame.MOUSEBUTTONDOWN:
            pos = pygame.mouse.get_pos()
            column = (pos[0]-50) // (WIDTH + MARGIN)
            row = (pos[1]-50) // (HEIGHT + MARGIN)
            print("Click ", pos, "Grid coordinates: ", row, column)
            if event.button == 1:
                a.fill(row,column)
            elif event.button ==3:
                a.erase(row,column)



    screen.fill(BLACK)
    """add line description in right places"""

    # render and paint the horizontal and vertical text hints
    for i in range(a.size):
        line = desc_line(a.row(i))
        text = font.render("  ".join(line), True,WHITE)
        screen.blit(text,(FRAME-len(line)*10,FRAME+i*(HEIGHT+MARGIN)+7))
        line = map(str,desc_line(a.col(i)))
        # no easy way to blit text with multiple lines in pygame, so i have to do it one num at a time
        for j in range(len(line)):
            text = font.render(line[j], True, WHITE)
            screen.blit(text, (FRAME + i * (HEIGHT + MARGIN)+7,FRAME-(len(line)-j)*15))

    for row in range(a.size):
        for column in range(a.size):
            color = WHITE
            if a.body[row][column] == 'X':
                color = GREY
            pygame.draw.rect(screen,
                             color,
                             [(MARGIN + WIDTH) * column + MARGIN + FRAME,
                              (MARGIN + HEIGHT) * row + MARGIN + FRAME,
                              WIDTH,
                              HEIGHT])


    clock.tick(60)

    pygame.display.flip()
pygame.quit()
a.draw()
